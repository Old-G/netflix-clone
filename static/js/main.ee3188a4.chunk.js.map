{"version":3,"sources":["../node_modules/encoding/lib sync","firebase.js","screens/HomeScreen/components/NavBar/index.js","data/axios.js","data/Request.js","screens/HomeScreen/components/Banner/index.js","screens/HomeScreen/components/Row/index.js","screens/HomeScreen/index.js","screens/LoginScreen/components/signUp/index.js","screens/LoginScreen/index.js","features/userSlice.js","screens/ProfileScreen/components/PlansScreen/index.js","screens/ProfileScreen/index.js","App.js","app/store.js","serviceWorker.js","index.js","screens/HomeScreen/components/Banner/style.module.css","screens/LoginScreen/style.module.css","screens/ProfileScreen/style.module.css","screens/HomeScreen/components/NavBar/style.module.css","screens/HomeScreen/components/Row/style.module.css","screens/ProfileScreen/components/PlansScreen/style.module.css","screens/LoginScreen/components/signUp/style.module.css"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","NavBar","useState","show","setShow","history","useHistory","transitionNavbar","window","scrollY","useEffect","addEventListener","removeEventListener","className","cn","s","navBar","navBar__black","navBar__contents","onClick","push","navBar__logo","src","alt","navBar__avatar","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","banner","style","backgroundSize","backgroundRepeat","backgroundImage","backdrop_path","backgroundPosition","banner__contents","banner__title","title","name","original_name","buttons","banner__button","banner__description","overview","substring","banner__fadeBottom","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","row","row__posters","map","poster_path","row__poster","row__posterLarge","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","video","opts","height","width","playerVars","autoplay","HomeScreen","SignUpScreen","emailRef","useRef","passwordRef","signupScreen","ref","type","placeholder","preventDefault","signInWithEmailAndPassword","current","value","authUser","err","alert","message","signupScreen__gray","signupScreen__link","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","loginScreen","loginScreen__background","loginScreen__logo","loginScreen__button","loginScreen__gradient","loginScreen__body","loginScreen__input","loginScreen__getStarted","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","PlansScreen","products","setProducts","useSelector","subscription","setSubscription","collection","doc","uid","querySnapshot","forEach","role","current_period_end","seconds","current_period_start","where","productDoc","docs","price","prices","priceId","priceData","loadCheckout","add","success_url","location","origin","cancel_url","onSnapshot","snap","sessionId","loadStripe","redirectToCheckout","plansScreen","Date","toLocaleDateString","Object","entries","productId","productData","isCurrentPackage","toLowerCase","includes","plansScreen__plan_disabled","plansScreen__plan","plansScreen__info","description","ProfileScreen","profileScreen","profileScreen__body","profileScreen__info","profileScreen__details","email","profileScreen__plans","signOut","profileScreen__signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","path","exact","configureStore","reducer","userReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee3188a4.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 191;","import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAi3jB8y3KPsWPbLm-MJvTJdVuuSRc3Kls',\n  authDomain: 'netflix-clone-2e036.firebaseapp.com',\n  projectId: 'netflix-clone-2e036',\n  storageBucket: 'netflix-clone-2e036.appspot.com',\n  messagingSenderId: '920294508830',\n  appId: '1:920294508830:web:50d2e3e636992d8e74210f',\n}\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\nconst db = firebaseApp.firestore()\nconst auth = firebaseApp.auth()\n\nexport { auth }\nexport default db\n","import { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport s from './style.module.css'\nimport cn from 'classnames'\n\nfunction NavBar() {\n  const [show, setShow] = useState(false)\n  const history = useHistory()\n\n  const transitionNavbar = () => {\n    if (window.scrollY > 100) {\n      setShow(true)\n    } else {\n      setShow(false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', transitionNavbar)\n    return () => window.removeEventListener('scroll', transitionNavbar)\n  }, [])\n\n  return (\n    <div className={cn(s.navBar, show && [s.navBar__black])}>\n      <div className={cn(s.navBar__contents)}>\n        <img\n          onClick={() => history.push('/')}\n          className={cn(s.navBar__logo)}\n          src='http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png'\n          alt='netflix_logo'\n        />\n        <img\n          onClick={() => history.push('/profile')}\n          className={cn(s.navBar__avatar)}\n          src='https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png'\n          alt='avatar'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar\n","import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'http://api.themoviedb.org/3',\n})\n\nexport default instance\n","const API_KEY = 'f7912f5b008dd4ab86451b0bed7f16a7'\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests\n","import { useEffect, useState } from 'react'\nimport s from './style.module.css'\nimport cn from 'classnames'\nimport axios from '../../../../data/axios'\nimport requests from '../../../../data/Request'\n\nfunction Banner() {\n  const [movie, setMovie] = useState([])\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals)\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      )\n      return request\n    }\n    fetchData()\n  }, [])\n\n  function truncate(string, n) {\n    return string?.length > n ? string.substring(0, n - 1) + '...' : string\n  }\n\n  return (\n    <header\n      className={s.banner}\n      style={{\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\n        backgroundPosition: 'center top',\n      }}\n    >\n      <div className={cn(s.banner__contents)}>\n        <h1 className={cn(s.banner__title)}>\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className={cn(s.buttons)}>\n          <button className={cn(s.banner__button)}>Play</button>\n          <button className={cn(s.banner__button)}>My List</button>\n        </div>\n        <h1 className={cn(s.banner__description)}>\n          {truncate(movie?.overview, 150)}\n        </h1>\n      </div>\n\n      <div className={cn(s.banner__fadeBottom)} />\n    </header>\n  )\n}\n\nexport default Banner\n","import { useEffect, useState } from 'react'\nimport s from './style.module.css'\nimport cn from 'classnames'\nimport axios from '../../../../data/axios'\nimport YouTube from 'react-youtube'\nimport movieTrailer from 'movie-trailer'\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n  const [movies, setMovies] = useState([])\n  const [trailerUrl, setTrailerUrl] = useState('')\n\n  const base_url = 'http://image.tmdb.org/t/p/original/'\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl)\n      setMovies(request.data.results)\n      return request\n    }\n    fetchData()\n  }, [fetchUrl])\n\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  }\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl('')\n    } else {\n      movieTrailer(movie?.name || '')\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search)\n          setTrailerUrl(urlParams.get('v'))\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n  }\n\n  return (\n    <div className={s.row}>\n      <h2>{title}</h2>\n\n      <div className={s.row__posters}>\n        {movies.map(\n          (movie) =>\n            ((isLargeRow && movie.poster_path) ||\n              (!isLargeRow && movie.backdrop_path)) && (\n              <img\n                className={cn(\n                  s.row__poster,\n                  isLargeRow && [s.row__posterLarge]\n                )}\n                key={movie.id}\n                onClick={() => handleClick(movie)}\n                src={`${base_url}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n              />\n            )\n        )}\n      </div>\n      {trailerUrl && <YouTube video={trailerUrl} opts={opts} />}\n    </div>\n  )\n}\n\nexport default Row\n","import NavBar from './components/NavBar'\nimport Banner from './components/Banner'\nimport Row from './components/Row'\nimport requests from '../../data/Request'\n\nfunction HomeScreen() {\n  return (\n    <div className='homeScreen'>\n      <NavBar />\n      <Banner />\n      <Row\n        title='NETFLIX ORIGINAL'\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title='Trending Now' fetchUrl={requests.fetchTrending} />\n      <Row title='Top Rated' fetchUrl={requests.fetchTopRated} />\n      <Row title='Action Movies' fetchUrl={requests.fetchActionMovies} />\n      <Row title='Comedy Movies' fetchUrl={requests.fetchComedyMovies} />\n      <Row title='Horror Movies' fetchUrl={requests.fetchHorrorMovies} />\n      <Row title='Romance Movies' fetchUrl={requests.fetchRomanceMovies} />\n      <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  )\n}\n\nexport default HomeScreen\n","import { useRef } from 'react'\nimport { auth } from '../../../../firebase'\nimport s from './style.module.css'\n\nfunction SignUpScreen() {\n  const emailRef = useRef(null)\n  const passwordRef = useRef(null)\n\n  const register = (e) => {\n    e.preventDefault()\n    auth\n      .createUserWithEmailAndPassword(\n        emailRef.current.value,\n        passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser)\n      })\n      .catch((err) => {\n        alert(err.message)\n      })\n  }\n\n  const signIn = (e) => {\n    e.preventDefault()\n    auth\n      .signInWithEmailAndPassword(\n        emailRef.current.value,\n        passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser)\n      })\n      .catch((err) => {\n        alert(err.message)\n      })\n  }\n\n  return (\n    <div className={s.signupScreen}>\n      <form>\n        <h1>Sign In</h1>\n        <input ref={emailRef} type='email' placeholder='Email' />\n        <input ref={passwordRef} type='password' placeholder='Password' />\n        <button type='submit' onClick={signIn}>\n          Sign In\n        </button>\n\n        <h4>\n          <span className={s.signupScreen__gray}>New to Netflix? </span>\n          <span className={s.signupScreen__link} onClick={register}>\n            Sign Up now.\n          </span>\n        </h4>\n      </form>\n    </div>\n  )\n}\n\nexport default SignUpScreen\n","import { useState } from 'react'\nimport SignUpScreen from './components/signUp'\nimport s from './style.module.css'\n\nfunction LoginScreen() {\n  const [signIn, setSignIn] = useState(false)\n\n  return (\n    <div className={s.loginScreen}>\n      <div className={s.loginScreen__background}>\n        <img\n          className={s.loginScreen__logo}\n          src='http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png'\n          alt='netflix_logo'\n        />\n        <button\n          onClick={() => setSignIn(true)}\n          className={s.loginScreen__button}\n        >\n          Sign In\n        </button>\n\n        <div className={s.loginScreen__gradient} />\n      </div>\n\n      <div className={s.loginScreen__body}>\n        {signIn ? (\n          <SignUpScreen />\n        ) : (\n          <>\n            <h1>Unlimited films, TV programmes and more.</h1>\n            <h2>Watch anywhere. Cancel at any time.</h2>\n            <h3>\n              Ready to watch? Enter your email to create or restart your\n              membership\n            </h3>\n\n            <div className={s.loginScreen__input}>\n              <form>\n                <input type='email' placeholder='Email Address' />\n                <button\n                  onClick={() => setSignIn(true)}\n                  className={s.loginScreen__getStarted}\n                >\n                  GET STARTED\n                </button>\n              </form>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreen\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n    logout: (state) => {\r\n      state.user = null\r\n    },\r\n  },\r\n})\r\n\r\nexport const { login, logout } = userSlice.actions\r\n\r\nexport const selectUser = (state) => state.user.user\r\n\r\nexport default userSlice.reducer\r\n","import { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from '../../../../features/userSlice'\nimport { loadStripe } from '@stripe/stripe-js'\nimport db from '../../../../firebase'\nimport s from './style.module.css'\nimport cn from 'classnames'\n\nfunction PlansScreen() {\n  const [products, setProducts] = useState([])\n  const user = useSelector(selectUser)\n  const [subscription, setSubscription] = useState(null)\n\n  useEffect(() => {\n    db.collection('customers')\n      .doc(user.uid)\n      .collection('subscriptions')\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach(async (subscription) => {\n          setSubscription({\n            role: subscription.data().role,\n            current_period_end: subscription.data().current_period_end.seconds,\n            current_period_start: subscription.data().current_period_start\n              .seconds,\n          })\n        })\n      })\n  }, [user.uid])\n\n  useEffect(() => {\n    db.collection('products')\n      .where('active', '==', true)\n      .get()\n      .then((querySnapshot) => {\n        const products = {}\n        querySnapshot.forEach(async (productDoc) => {\n          products[productDoc.id] = productDoc.data()\n          const priceSnap = await productDoc.ref.collection('prices').get()\n          priceSnap.docs.forEach((price) => {\n            products[productDoc.id].prices = {\n              priceId: price.id,\n              priceData: price.data(),\n            }\n          })\n        })\n        setProducts(products)\n      })\n  }, [])\n  console.log(products)\n\n  const loadCheckout = async (priceId) => {\n    const docRef = await db\n      .collection('customers')\n      .doc(user.uid)\n      .collection('checkout_sessions')\n      .add({\n        price: priceId,\n        success_url: window.location.origin,\n        cancel_url: window.location.origin,\n      })\n\n    docRef.onSnapshot(async (snap) => {\n      const { error, sessionId } = snap.data()\n      if (error) {\n        alert(`An error occured: ${error.message}`)\n      }\n\n      if (sessionId) {\n        const stripe = await loadStripe(\n          'pk_test_51IHY5bGxTMskvQrGCC0gRGHoiphdjCAqSM92Nt453P9E4jevxDyczNtZ3eLHo2JQs5UecOzyche1jXaBArRMrIzT00FL6I5P1G'\n        )\n        stripe.redirectToCheckout({ sessionId })\n      }\n    })\n  }\n\n  return (\n    <div className={s.plansScreen}>\n      <br />\n      {subscription && (\n        <p>\n          Renewal date:{' '}\n          {new Date(\n            subscription?.current_period_end * 1000\n          ).toLocaleDateString()}\n        </p>\n      )}\n      {Object.entries(products).map(([productId, productData]) => {\n        const isCurrentPackage = productData.name\n          ?.toLowerCase()\n          .includes(subscription?.role)\n        return (\n          <div\n            key={productId}\n            className={cn(\n              isCurrentPackage && [s.plansScreen__plan_disabled],\n              s.plansScreen__plan\n            )}\n          >\n            <div className={s.plansScreen__info}>\n              <h5>{productData.name}</h5>\n              <h6>{productData.description}</h6>\n            </div>\n\n            <button onClick={() => loadCheckout(productData.prices.priceId)}>\n              {isCurrentPackage ? 'Current Package' : 'Subscribe'}\n            </button>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default PlansScreen\n","import { selectUser } from '../../features/userSlice'\nimport { useSelector } from 'react-redux'\nimport NavBar from '../HomeScreen/components/NavBar'\nimport s from './style.module.css'\nimport { auth } from '../../firebase'\nimport PlansScreen from './components/PlansScreen'\n\nfunction ProfileScreen() {\n  const user = useSelector(selectUser)\n\n  return (\n    <div className={s.profileScreen}>\n      <NavBar />\n      <div className={s.profileScreen__body}>\n        <h1>Edit Profile</h1>\n        <div className={s.profileScreen__info}>\n          <img\n            src='https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png'\n            alt='avatar'\n          />\n          <div className={s.profileScreen__details}>\n            <h2>{user.email}</h2>\n            <div className={s.profileScreen__plans}>\n            <h3>Plans</h3>\n            <PlansScreen />\n              <button\n                onClick={() => auth.signOut()}\n                className={s.profileScreen__signOut}\n              >\n                Sign Out\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileScreen\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport './App.css'\r\nimport { auth } from './firebase'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport { login, logout, selectUser } from './features/userSlice'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          login({\r\n            uid: userAuth.uid,\r\n            email: userAuth.email,\r\n          })\r\n        )\r\n      } else {\r\n        dispatch(logout())\r\n      }\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Router>\r\n        {!user ? (\r\n          <LoginScreen />\r\n        ) : (\r\n          <Switch>\r\n            <Route path='/profile'>\r\n              <ProfileScreen />\r\n            </Route>\r\n            <Route exact path='/'>\r\n              <HomeScreen />\r\n            </Route>\r\n          </Switch>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from '../features/userSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n})\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"style_banner__1Uz7q\",\"banner__contents\":\"style_banner__contents__2_rec\",\"banner__title\":\"style_banner__title__3YvN4\",\"banner__description\":\"style_banner__description__2EpkX\",\"banner__fadeBottom\":\"style_banner__fadeBottom__Y8oMa\",\"banner__button\":\"style_banner__button__2GjIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginScreen\":\"style_loginScreen__102uu\",\"loginScreen__body\":\"style_loginScreen__body__Jn6If\",\"loginScreen__gradient\":\"style_loginScreen__gradient__2U1gc\",\"loginScreen__button\":\"style_loginScreen__button__38DKJ\",\"loginScreen__logo\":\"style_loginScreen__logo__3jtdQ\",\"loginScreen__input\":\"style_loginScreen__input__Lq7Kv\",\"loginScreen__getStarted\":\"style_loginScreen__getStarted__PVczU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileScreen\":\"style_profileScreen__B1OoR\",\"profileScreen__body\":\"style_profileScreen__body__6n4QE\",\"profileScreen__info\":\"style_profileScreen__info__2vMKf\",\"profileScreen__details\":\"style_profileScreen__details__3fd_-\",\"profileScreen__signOut\":\"style_profileScreen__signOut__1PJmZ\",\"profileScreen__plans\":\"style_profileScreen__plans__7mQHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"style_navBar__3YpCI\",\"navBar__contents\":\"style_navBar__contents__31V3H\",\"navBar__black\":\"style_navBar__black__2zCzs\",\"navBar__logo\":\"style_navBar__logo__3fFho\",\"navBar__avatar\":\"style_navBar__avatar__1_23Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"style_row__3ZiGm\",\"row__posters\":\"style_row__posters__1GTXi\",\"row__poster\":\"style_row__poster__IeiAu\",\"row__posterLarge\":\"style_row__posterLarge__xx_3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plansScreen__plan\":\"style_plansScreen__plan__1Ag7n\",\"plansScreen__plan--disabled\":\"style_plansScreen__plan--disabled__35pB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signupScreen\":\"style_signupScreen__WTNqy\",\"signupScreen__gray\":\"style_signupScreen__gray__2RDxR\",\"signupScreen__link\":\"style_signupScreen__link__1kvRT\"};"],"sourceRoot":""}